name: Lighthouse Testing

concurrency:
  group: "lighthouse-testing-${{ github.head_ref || github.ref_name }}"
  cancel-in-progress: true

on:
  push:
    branches: ["main", "dev", "no-layout-shift"]
  pull_request:
    branches: ["main", "dev", "no-layout-shift"]

jobs:
  lighthouse-testing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ">=22"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Quartz
        run: npx quartz build

      - name: Determine Branch Info for Cloudflare & Lighthouse
        id: branch_info
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For PRs, use a consistent name like pr-123
            CF_BRANCH_NAME="pr-${{ github.event.pull_request.number }}"
          else
            # For direct pushes, use the Git branch name
            CF_BRANCH_NAME="${{ github.ref_name }}"
          fi
          echo "cf_branch_name=${CF_BRANCH_NAME}" >> $GITHUB_OUTPUT

          # Sanitize the branch name for constructing the Lighthouse URL hostname
          # Converts to lowercase, replaces non-alphanumeric (except hyphen) with hyphen, removes leading/trailing hyphens
          LH_HOSTNAME_PART=$(echo "$CF_BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed -e 's/[^a-z0-9-]/-/g' -e 's/^-*//' -e 's/-*$//')
          echo "lh_hostname_part=${LH_HOSTNAME_PART}" >> $GITHUB_OUTPUT

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Publish to Cloudflare Pages for Lighthouse testing
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Deploying to Cloudflare Pages branch: ${{ steps.branch_info.outputs.cf_branch_name }}"
          npx wrangler pages deploy ./public --project-name=turntrout --branch=${{ steps.branch_info.outputs.cf_branch_name }} --commit-dirty=true

      - name: Run Lighthouse CI against Cloudflare deployment
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://${{ steps.branch_info.outputs.lh_hostname_part }}.turntrout.pages.dev/test-page
            https://${{ steps.branch_info.outputs.lh_hostname_part }}.turntrout.pages.dev/test-page#spoilers
            https://${{ steps.branch_info.outputs.lh_hostname_part }}.turntrout.pages.dev/test-page#videos
            https://${{ steps.branch_info.outputs.lh_hostname_part }}.turntrout.pages.dev/test-page#admonitions
            https://${{ steps.branch_info.outputs.lh_hostname_part }}.turntrout.pages.dev/test-page#footnote-label
          temporaryPublicStorage: true
          configPath: ".github/lighthouse-cls-only-config.json"

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: /home/runner/work/TurnTrout.com/TurnTrout.com/.lighthouseci/
