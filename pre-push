#!/bin/sh

function cleanup {
    PUSHED_CHANGES=$1
    if [[ $PUSHED_CHANGES -eq 1 ]]; then
        git stash pop >>/dev/null
    fi
    if $SERVER_STARTED; then
        kill -TERM $SERVER_PID
    fi
}

# If there are any changes, stash them and return 1, otherwise return 0.
function stash_and_exit {
    PREV_NUM_STASHES=$(git stash list | wc -l)
    git stash push --include-untracked >>/dev/null
    # Check if anything was stashed
    STASHED_CHANGES=$([[ $(git stash list | wc -l) -gt $PREV_NUM_STASHES ]] && echo 1 || echo 0)
    echo "$STASHED_CHANGES"
}

set -e

CURRENT_BRANCH=$(git symbolic-ref --short head)
SERVER_STARTED=false

if [[ $CURRENT_BRANCH != "main" ]]; then
	exit 0
fi

GIT_ROOT=$(git rev-parse --show-toplevel)
cd "$GIT_ROOT"

PUSHED_CHANGES=$(stash_and_exit)
trap 'cleanup $PUSHED_CHANGES' EXIT

# Run jest tests
npm run test

# Run spellcheck on all markdown files
TEMP_DICT="/tmp/candidate_wordlist.txt"
PERM_DICT=".wordlist.txt"

set +e # Temporarily allow errors
npx spellchecker --no-suggestions --quiet --dictionaries $PERM_DICT --generate-dictionary $TEMP_DICT content/**.md !content/drafts/**/*.md

# Delete any words which should not be added to the ignore list. Make sure to fix any such words before quitting the editor.
if [ $? -ne 0 ]; then
	nvim $TEMP_DICT -c 'lua vim.notify("Delete invalid words which should not be added to the dictionary.")' && cat $TEMP_DICT >>$PERM_DICT && rm $TEMP_DICT
	set -e # Re-enable errors
	npx spellchecker --no-suggestions --quiet --dictionaries $PERM_DICT --generate-dictionary $TEMP_DICT content/**.md !content/drafts/**/*.md

	# Amend the commit with the updated dictionary
	git add $PERM_DICT
	git commit --amend --no-edit
fi
set -e

echo "\033[0;32mSpellcheck passed\033[0m" # In green

# Check that conversion+uploading tests pass
PY_TEST_DIR="$GIT_ROOT"/scripts/tests
python -m pytest $PY_TEST_DIR --ignore="$PY_TEST_DIR"/test_md_processing.py

STATIC_FOLDER="$GIT_ROOT"/quartz/static
# If asset_staging isn't empty
if [ -n "$(ls -A "$GIT_ROOT"/content/asset_staging)" ]; then
    mv "$GIT_ROOT"/content/asset_staging* "$STATIC_FOLDER"/images/posts
fi

# Convert images to AVIF format, mp4s to webm, and remove metadata
python "$GIT_ROOT"/scripts/convert_assets.py --remove-originals --strip-metadata

# Upload assets to R2 bucket
LOCAL_ASSET_DIR="$GIT_ROOT"/../website-media-r2/static
python "$GIT_ROOT"/scripts/r2_upload.py --move-to-dir "$LOCAL_ASSET_DIR" --replacement-dir "$GIT_ROOT"/content --all-asset-dir "$GIT_ROOT"/quartz/static

# Commit changes to the moved-to local dir
# (NOTE will also commit current changes)
cd "$LOCAL_ASSET_DIR"
if [ $(git status --porcelain | wc -l) -gt 0 ]; then
    git add -A
    git commit -m "Added assets which were transferred from the main repo."
fi
cd -


SERVER_STARTED=false
if ! nc -z localhost 8080; then
	npx quartz build --serve >/dev/null &
	SERVER_PID=$! # Store the server's process ID
	SERVER_STARTED=true
	# Wait for the server to be ready
	while ! nc -z localhost 8080; do
		sleep 0.1 # Check every 100ms
	done

	echo "Started quartz server."
fi

# Check that all internal links on the served site are valid
# linkchecker http://localhost:8080 --no-status --ignore-url=/static
# Check that all external assets (presumably hosted on Cloudflare R2) are valid
# ASSET_REFERENCING_FILES=$(fish $(source "$GIT_ROOT/scripts/utils.fish" && find_asset_referencing_files)) # TODO broken
# echo $ASSET_REFERENCING_FILES # TODO check image files -- use python?
# linkchecker --check-extern --ignore-urls="(?!.*\.(png|jpe?g|gif|webp|webm|svg|mp3|mp4)$).*" http://localhost:8080

# Run visual regression testing
set +e
fish "$GIT_ROOT/scripts/run_backstop.fish"

TEST_STATUS=$?
# Check if the test failed
if [[ "$TEST_STATUS" -ne 0 ]]; then
    echo "Visual regression test failed. Review the report:"
    open backstop/backstop_data/html_report/index.html &
    # Prompt for approval
    read -p "Do you approve the changes? (y/N): " answer </dev/tty
    # Update references if approved
    if [[ "$answer" = "y" ]]; then
        npx backstop approve --config=backstop.cjs
        echo "Reference screenshots updated."
    else
        echo "Changes rejected. Test failure remains."
        exit 1
    fi
fi

# Exit if no changes were made
if [ $(git status --porcelain | wc -l) -gt 0 ]; then
    # If references updated and files deleted, then commit the changes
    git add -A
    # Prompt the user to review the changes
    git commit -m "Uploaded assets to r2 and updated references."
fi
