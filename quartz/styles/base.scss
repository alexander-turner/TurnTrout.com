@use "./variables.scss" as *;
@use "./syntax.scss";
@use "./callouts.scss";
@use "./colors.scss";
@use "./fonts.scss";

html {
  scroll-behavior: smooth;
  overflow-x: hidden;
  width: 100vw;
}
body,
section {
  margin: 0;
  max-width: 100%;
  box-sizing: border-box;
  background-color: var(--light);
  font-family: var(--font-text);
  color: var(--dark);
}

/* Define the scrollbar style */
body,
right {
  scrollbar-color: var(--lightergray) var(--light);
}

.right::-webkit-scrollbar,
body::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

/* Define the thumb style */
.right::-webkit-scrollbar-thumb,
body::-webkit-scrollbar-thumb {
  background: var(--lightergray);
  border-radius: 5px;
}

.text-highlight {
  background-color: #fff23688;
  padding: 0 0.1rem;
  border-radius: 5px;
}

::selection {
  background: color-mix(in srgb, var(--tertiary) 30%, rgba(255, 255, 255, 0));
  color: var(--darkgray);
}

p,
ul,
text,
a,
tr,
td,
li,
ol,
ul,
.katex,
.math {
  color: var(--dark);
  fill: var(--dark);
  overflow-wrap: anywhere;
  hyphens: auto;
}

.math {
  &.math-display {
    text-align: center;
  }
}

.katex {
  color: inherit;
  font-size: 1em !important;
  margin-left: auto; // Center katex
  margin-right: auto;
} // Override minified katex styles

strong {
  font-weight: $semiBoldWeight;
}

a {
  text-decoration-thickness: 0.06em;
  transition: color 0.2s ease;
  color: var(--secondary);

  // Ignore descendants of popover class
  &:hover {
    color: var(--tertiary) !important;
  }

  // Style same-page links, but exclude those inside headers
  // This targets links with the 'same-page-link' class that are not direct children of h1-h6 elements
  // The '&' in the :not() pseudo-class refers to the current selector (a.same-page-link)
  &.same-page-link:not(h1 > &, h2 > &, h3 > &, h4 > &, h5 > &, h6 > &) {
    background-color: color-mix(in srgb, gray 10%, transparent);
    padding: 0 0.1rem;
    border-radius: 5px;
    line-height: var(--lineHeight);

    // Remove background and padding for links containing images
    &:has(> img) {
      background-color: none;
      border-radius: 0;
      padding: 0;
    }

    // Add a '#' before tag links
    &.tag-link {
      &::before {
        content: "#";
      }
    }
  }

  &.external .external-icon {
    height: 1ex;
    margin: 0 0.15em;

    > path {
      fill: var(--dark);
    }
  }
}

.desktop-only {
  display: initial;
  @media all and (max-width: $fullPageWidth) {
    display: none;
  }
}

hr.desktop-only {
  display: block;
}
.mobile-only {
  display: none;
  @media all and (max-width: $fullPageWidth) {
    display: initial;
  }
}

.page {
  @media all and (max-width: $fullPageWidth) {
    margin: 0 auto;
    padding: 0 calc(2 * $baseMargin);
    max-width: $pageWidth;
  }

  & article {
    & li:has(> input[type="checkbox"]) {
      list-style-type: none;
      padding-left: 0;
    }

    & li:has(> input[type="checkbox"]:checked) {
      text-decoration: line-through;
      text-decoration-color: var(--gray);
      color: var(--gray);
    }

    & li > *:first-child:not(blockquote) {
      margin-top: 0;
    }
    & li > *:last-child {
      margin-bottom: 0;
    }
  }

  & > #quartz-body {
    width: 100%;
    overflow-x: visible;
    display: flex;

    @media all and (max-width: $fullPageWidth) {
      flex-direction: column;
    }

    & .sidebar {
      flex: 1;
      flex-direction: column;
      top: 0;
      width: $sidePanelWidth;
      &.right {
        width: $rightWidth;
      }

      margin-top: $topSpacing;
      box-sizing: border-box;

      padding: 0 calc(8 * $baseMargin);
      position: fixed;
      @media all and (max-width: $fullPageWidth) {
        position: relative;
        flex-direction: column;
        max-width: 100vw;
        padding: 0;
        margin-top: 0rem;
      }
    }

    & #left-sidebar {
      display: flex;
      margin-right: calc(6 * $baseMargin);
      @media all and (max-width: $fullPageWidth) {
        gap: 0;
        align-items: center;
        // width: $pageWidth;
        position: sticky;
      }
      @media all and (min-width: $fullPageWidth) {
        left: calc(calc(100vw - $pageWidth) / 2 - $sidePanelWidth);
      }
    }

    & #right-sidebar {
      @media all and (min-width: calc($fullPageWidth + 100px)) {
        padding-right: calc(2 * $baseMargin); // Make more space for ToC
      }

      right: calc(calc(100vw - $pageWidth) / 2 - $rightWidth);
      height: 96vh; // Leave room for bottom of ContentMeta
      overflow-y: auto; // Allow scrolling
      flex-wrap: wrap;
      @media all and (max-width: $fullPageWidth) {
        left: 0;
        & > * {
          flex: 1;
          min-width: 140px;
        }
      }
    }
  }

  & .page-header {
    width: $pageWidth;
    margin: $topSpacing auto 0 auto;
    @media all and (max-width: $fullPageWidth) {
      width: initial;
      margin-top: calc(2 * $baseMargin);
    }
  }

  & .center,
  & footer {
    margin-left: auto;
    margin-right: auto;
    width: $pageWidth;

    @media all and (max-width: $fullPageWidth) {
      width: initial;
      margin-left: 0;
      margin-right: 0;
    }
  }
}

input[type="checkbox"] {
  transform: translateY(2px);
  color: var(--secondary);
  border: 1px solid var(--lightgray);
  border-radius: 3px;
  background-color: var(--light);
  position: relative;
  margin-inline-end: calc(0.5 * $baseMargin);
  margin-inline-start: calc(-3 * $baseMargin);
  appearance: none;
  width: 16px;
  height: 16px;

  &:checked {
    border-color: var(--secondary);
    background-color: var(--secondary);

    &::after {
      content: "";
      position: absolute;
      left: 4px;
      top: 1px;
      width: 4px;
      height: 8px;
      display: block;
      border: solid var(--light);
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
    }
  }
}

blockquote {
  margin: calc(2 * $baseMargin) 0;
  border-left: 3px solid var(--gray);
  padding-left: calc(2 * $baseMargin);
}

h1,
h2,
h3,
h4,
h5,
h6,
thead {
  font-family: var(--headerFont);
  color: var(--dark);
  position: relative; // For anchor links

  article & > a[role="anchor"] {
    color: var(--lightgray);
    background-color: transparent;

    @media all and (min-width: $marginsBegin) {
      position: absolute;
      left: -1.5rem;
      top: 0;
    }
    .popover & {
      display: none;
    }
  }

  & a {
    color: var(--dark);
  }
}

li {
  width: fit-content;
  max-width: fit-content;

  // This is for the site nav menu
  .menu & {
    width: 100%;
    max-width: 100%;
  }
}

h1,
h2,
h3,
h4,
h5,
h6,
#toc-content li {
  // Oldstyle is too small for headers
  &::first-letter,
  & span,
  .number-prefix {
    font-variant-numeric: lining-nums;
  }
  // color: var(--color-header);
  font-family: var(--font-text-header);

  & .small-caps {
    font-weight: lighter;
  }

  &[id] > a {
    text-decoration: none;
    color: var(--dark);
  }

  &[id]:hover > a {
    opacity: 1;
  }
}

figure[data-rehype-pretty-code-figure] {
  margin: 0;
  position: relative;
  line-height: 1.6rem;
  position: relative;

  & > [data-rehype-pretty-code-title] {
    font-family: var(--codeFont);
    padding: 0.1rem 0.5rem;
    border: 1px solid var(--lightgray);
    width: max-content;
    border-radius: 5px;
    margin-bottom: -0.5rem;
    color: var(--dark);
  }

  & > pre {
    padding: 0;
  }
}

pre {
  font-family: var(--codeFont);
  padding: 0 0.5rem;
  border-radius: 5px;
  overflow-x: auto;
  border: 1px solid var(--lightgray);
  position: relative;

  &:has(> code.mermaid) {
    border: none;
  }

  & > code {
    background: none;
    padding: 0;
    font-size: var(--text-size-80);
    counter-reset: line;
    counter-increment: line 0;
    display: grid;
    padding: 0.5rem 0;

    & [data-highlighted-chars] {
      background-color: var(--highlight);
      border-radius: 5px;
    }

    & > [data-line] {
      padding: 0 0.25rem;
      // Want wrapped lines to indent
      text-indent: calc(-6 * $baseMargin);
      padding-left: calc(6 * $baseMargin);
      text-wrap: pretty;

      box-sizing: border-box;
      border-left: 3px solid transparent;

      &[data-highlighted-line] {
        background-color: var(--highlight);
        border-left: 3px solid var(--secondary);
      }

      &::before {
        content: counter(line);
        counter-increment: line;
        width: calc(2 * $baseMargin);
        margin-right: calc(2 * $baseMargin);
        display: inline-block;
        text-align: right;
        color: rgba(115, 138, 148, 0.6);
      }
    }

    &[data-line-numbers-max-digits="2"] > [data-line]::before {
      width: 2rem;
    }

    &[data-line-numbers-max-digits="3"] > [data-line]::before {
      width: 3rem;
    }
  }
}

code {
  font-family: var(--codeFont);
  vertical-align: baseline;
}

a > code {
  font-weight: $normalWeight;
}

.table-container {
  overflow-x: auto;

  & > table {
    margin: calc(2 * $baseMargin);
    padding: calc(3 * $baseMargin);
    border-collapse: collapse;
  }
}

.table-container:first-child > table {
  margin-top: $baseMargin;
}

dt {
  font-weight: $semiBoldWeight;
  display: inline;
}

dd {
  margin-bottom: calc(0.5 * $baseMargin);
  margin-top: calc(0.5 * $baseMargin);
}

th {
  text-align: left;
  padding: $baseMargin calc(1.5 * $baseMargin);
  border-bottom: 2px solid var(--gray);
}

td {
  padding: calc(0.5 * $baseMargin) calc(1.5 * $baseMargin);
  vertical-align: top;
}

tr {
  border-bottom: 1px solid var(--lightgray);
  &:last-child {
    border-bottom: none;
  }
}

img {
  max-width: 87.5%;
  width: auto;
  border-radius: 5px;
  margin: calc(2 * $baseMargin) 0;
}

blockquote > p:first-of-type {
  margin-top: 0;
}

hr {
  width: 100%;
  margin: 2rem auto;
  height: 1px;
  border: none;
  background-color: var(--lightgray);
}

audio,
video {
  width: 100%;
  border-radius: 5px;
}

.spacer {
  flex: 1 1 auto;
}

.transclude {
  ul {
    padding-left: calc(2 * $baseMargin);
  }
}

ul ul,
ol ul {
  margin-top: calc(0.5 * $baseMargin);
}

ol,
ul {
  margin-top: calc(1 * $baseMargin);
}

.katex {
  overflow-x: auto;
  overflow-y: hidden;
}
.katex-display {
  overflow-x: auto;
  overflow-y: hidden;
}

#quartz-root {
  overflow-x: visible;
}

// Nested ol and ul should have margin before them
ol:not(ol > ol):not(li > ol) {
  margin-top: calc(1.5 * $baseMargin);
}
